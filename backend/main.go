// Code generated by hertz generator.

package main

import (
	"log"
	"time"

	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/hertz-contrib/cors"
	"github.com/manteia/zhulong/pkg/config"
	_ "github.com/manteia/zhulong/biz/handler/zhulong/api"
)

func main() {
	// 加载配置
	cfg, err := config.Load()
	if err != nil {
		log.Fatalf("配置加载失败: %v", err)
	}

	// 验证配置
	if err := cfg.Validate(); err != nil {
		log.Fatalf("配置验证失败: %v", err)
	}

	// 打印配置信息（用于调试）
	if cfg.App.Debug {
		cfg.PrintConfig()
	}

	// 创建Hertz服务器，使用配置中的地址
	h := server.Default(server.WithHostPorts(cfg.GetServerAddr()))

	// 配置CORS中间件
	h.Use(cors.New(cors.Config{
		AllowAllOrigins:  true,
		AllowMethods:     []string{"GET", "POST", "PUT", "PATCH", "DELETE", "HEAD", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Length", "Content-Type", "Authorization", "Accept", "X-Requested-With", "Cache-Control", "Accept-Language", "Accept-Encoding", "Connection", "Host", "Referer", "User-Agent"},
		ExposeHeaders:    []string{"Content-Length", "Content-Type"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))

	register(h)
	h.Spin()
}